// Code generated by protoc-gen-go. DO NOT EDIT.
// source: latlon.proto

/*
Package latlonpb is a generated protocol buffer package.

It is generated from these files:
	latlon.proto

It has these top-level messages:
	LookupReq
	Location
	LookupResp
*/
package latlonpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LookupReq struct {
	Lat float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	Lon float64 `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
}

func (m *LookupReq) Reset()                    { *m = LookupReq{} }
func (m *LookupReq) String() string            { return proto.CompactTextString(m) }
func (*LookupReq) ProtoMessage()               {}
func (*LookupReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LookupReq) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *LookupReq) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type Location struct {
	Name     string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Lat      float64 `protobuf:"fixed64,2,opt,name=lat" json:"lat,omitempty"`
	Lon      float64 `protobuf:"fixed64,3,opt,name=lon" json:"lon,omitempty"`
	Distance float64 `protobuf:"fixed64,4,opt,name=distance" json:"distance,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *Location) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type LookupResp struct {
	Location []*Location `protobuf:"bytes,1,rep,name=location" json:"location,omitempty"`
}

func (m *LookupResp) Reset()                    { *m = LookupResp{} }
func (m *LookupResp) String() string            { return proto.CompactTextString(m) }
func (*LookupResp) ProtoMessage()               {}
func (*LookupResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LookupResp) GetLocation() []*Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func init() {
	proto.RegisterType((*LookupReq)(nil), "latlonpb.LookupReq")
	proto.RegisterType((*Location)(nil), "latlonpb.Location")
	proto.RegisterType((*LookupResp)(nil), "latlonpb.LookupResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GeoLookup service

type GeoLookupClient interface {
	Lookup(ctx context.Context, in *LookupReq, opts ...grpc.CallOption) (*LookupResp, error)
}

type geoLookupClient struct {
	cc *grpc.ClientConn
}

func NewGeoLookupClient(cc *grpc.ClientConn) GeoLookupClient {
	return &geoLookupClient{cc}
}

func (c *geoLookupClient) Lookup(ctx context.Context, in *LookupReq, opts ...grpc.CallOption) (*LookupResp, error) {
	out := new(LookupResp)
	err := grpc.Invoke(ctx, "/latlonpb.GeoLookup/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GeoLookup service

type GeoLookupServer interface {
	Lookup(context.Context, *LookupReq) (*LookupResp, error)
}

func RegisterGeoLookupServer(s *grpc.Server, srv GeoLookupServer) {
	s.RegisterService(&_GeoLookup_serviceDesc, srv)
}

func _GeoLookup_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoLookupServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/latlonpb.GeoLookup/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoLookupServer).Lookup(ctx, req.(*LookupReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoLookup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "latlonpb.GeoLookup",
	HandlerType: (*GeoLookupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Lookup",
			Handler:    _GeoLookup_Lookup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "latlon.proto",
}

func init() { proto.RegisterFile("latlon.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4f, 0xc6, 0x20,
	0x10, 0x86, 0xe5, 0x6b, 0xd3, 0xd0, 0xd3, 0xc1, 0x9c, 0x0e, 0xa4, 0x53, 0xc3, 0xd4, 0x09, 0x93,
	0x1a, 0x37, 0x27, 0x17, 0x97, 0x4e, 0xfc, 0x00, 0x13, 0x5a, 0x19, 0x1a, 0x91, 0x43, 0x8b, 0xff,
	0xdf, 0x48, 0xa1, 0x31, 0xe9, 0xf6, 0xde, 0x13, 0xee, 0xe1, 0x05, 0xb8, 0x71, 0x26, 0x3a, 0xf2,
	0x2a, 0x7c, 0x53, 0x24, 0xe4, 0xfb, 0x14, 0x66, 0xf9, 0x00, 0xed, 0x44, 0xf4, 0xf1, 0x13, 0xb4,
	0xfd, 0xc2, 0x5b, 0xa8, 0x9c, 0x89, 0x82, 0xf5, 0x6c, 0x60, 0xfa, 0x2f, 0x26, 0x42, 0x5e, 0x5c,
	0x32, 0x21, 0x2f, 0xdf, 0x80, 0x4f, 0xb4, 0x98, 0xb8, 0x92, 0x47, 0x84, 0xda, 0x9b, 0x4f, 0x9b,
	0x16, 0x5a, 0x9d, 0x72, 0x71, 0x5c, 0x4e, 0x8e, 0xea, 0x70, 0x60, 0x07, 0xfc, 0x7d, 0xdd, 0xa2,
	0xf1, 0x8b, 0x15, 0x75, 0xc2, 0xc7, 0x2c, 0x9f, 0x01, 0x4a, 0xa1, 0x2d, 0xa0, 0x02, 0xee, 0xf2,
	0x6d, 0x82, 0xf5, 0xd5, 0x70, 0x3d, 0xa2, 0x2a, 0xdd, 0x55, 0xe9, 0xa1, 0x8f, 0x33, 0xe3, 0x0b,
	0xb4, 0xaf, 0x96, 0x76, 0x01, 0x3e, 0x41, 0x93, 0xd3, 0xdd, 0xff, 0xa5, 0xfc, 0xda, 0xee, 0xfe,
	0x0c, 0xb7, 0x20, 0xaf, 0xe6, 0x26, 0xfd, 0xd1, 0xe3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec,
	0xbc, 0xb3, 0x21, 0x33, 0x01, 0x00, 0x00,
}
